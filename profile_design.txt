so I want to redesign the profile mechanism from scratch. lets discuss this. 
ask plenty of questions to make sure you figure it out.

plotting is handled by the plotting manager in the server. 

the manager calls a bunch of registered profiles that handle specific plots.

the context is a R list with the coord mapper and other dynamic context parameters such as 
the contigs and their order. it is called for short cxt. 

profiles are R lists that have 4 or more elements:
- plot_f is a function that gets a context and a gglot object and adds the profile plots
- data_f returns the data, used by the plot_f. also gets as input the context. it is called internally by the plot_f as needed.
- attr is s list of profile attributes that are used to describe the profile. includes for example should_plot_grid that specifies if the profile should be plotted with a grid. it includes the profile title, shown on the y-axis. the height. and other various constant parameters defined when the profile is created. 
- type can be points or lines or segments

the view manager handles the plotting. for every profile it calls three main functions:
- pre_plot is a general function that plots things like the grid and the title on the y-axis.
- calls the plot_f of each profile
- post_plot can add things on top. for now keep this function there, but an empty call.

last profile can be the axis profile that shows the coordinates in contig space.

the plot_f returns an info data.frame that is kept by the manager. it is used to give information while hovering. the exact fields are determined by the profile type. if for example the type is 'points' the data.frame has x,y,desc. if it is hsegments (horizontal segments) fields would be x1, x2, desc.

ask me questions
